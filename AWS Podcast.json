{"podcast_details": {"podcast_title": "AWS Podcast", "episode_title": "#612: I4g storage instances powered by AWS Graviton2 processors", "episode_image": "http://d3gih7jbfe3jlq.cloudfront.net/AWS-Podcast-Title-Art.jpg", "episode_transcript": " This is episode 612 of the AWS podcast released on August 14th, 2023. Podcast confirmed. Welcome to the official AWS podcast. I'm Hanwin Lagren, also known as Han Solo, your friendly neighborhood co-host of the official ADOS podcast. And I'm joined by J\u00fcrgen Frick. Thanks for joining us. Yeah. Hello everyone. And thanks Han for having me. It's great to be here on the podcast and I'm looking forward for our little chat here. So before we get started, can you tell us a little bit about yourself and what do you do at Amazon Web Services? Absolutely. So I'm a senior technical product manager within EC2 and I'm responsible for Graviton based storage optimized instances such as IM4GN and IS4GN and I4G, which is the new kid on the block. We are going to talk more about today in this blog. So from a background, I've been dealing with storage devices and storage controllers almost all of my career. So dealing with storage instances as AWS, kind of my latest gig, if you will. So we're here to discuss the Amazon EC2, I4G storage optimized instances, the new kid on the block, which are powered by AWS Graviton 2 processors. And the Amazon EC2, I4G instances are based on AWS Nitro SSDs or solid state drives, which are custom built by AWS. They are optimized for IO intensive applications such as relational database, non-relational database and search engines such as elastic search and data analytics. So just going back to basics, like what are SSDs or solid state drive and how are they different from the HDDs or hard disk drive and where are you seeing this used in data centers today? That's a great question to kick it off here. So a solid state drive or SSD is a device that can store data persistently. Unlike HDDs, it uses flash memory. So if you compare it with an HDD, which has spinning platters where data is stored magnetically, all data in SSDs is stored in semiconductor chips. With that, SSDs offer significantly better concurrent random transactions, throughput and lower latency. If you use a latest laptop device, then most of today's laptop actually have an SSD and if you use laptops for a longer time, you might remember when they had HDDs, just every access to data on your storage took a little longer, whereas now with SSDs, your response times are much better. So AWS lead the cloud market with offering SSDs in EC2 instances, even back in early 2010 and has been the fastest growing storage media since then. So seeing what you're seeing from the customer, right? So do the customers run low latency storage workloads in the cloud already or is it somewhat new? So cloud lead the way with low latency database and storage with servers like i3 being the market leader in performance and latency for a long time. And low latency storage in AWS has been the infrastructure on which fast growing services like EBS, DynamoDB and Redshift has been using. However, as we continue to push for even lower latency, and by that, I mean not just average latency, but latency when servers are actually loaded and do meaningful stuff, we realized that we can do better than what's available in the market and bring more value to the customers. Gotcha. So what are Nitro SSDs and why did we build them? So at AWS, we have more than 15 years of understanding how the workloads perform at cloud scale and working with customers, we understood the pain points they wanted us to address regarding latency, performance, consistency and reliability. This is when we decided to build our own custom SSDs. Before we put Nitro SSDs in customers direct reach, we leveraged our first generation of these devices to power our IO Block Express EBS volumes, which allowed us to provide EBS volumes with lots of IOPS, plenty of throughput and a maximum volume size of up to 64 terabytes. Today, existing storage optimized instances, IAM4GN, IS4GN and I4I used the second generation AWS Nitro SSDs, where we learned more from first gen and further optimize the performance for real low latency workloads. Also, we continue to enhance reliability, telemetry and diagnostic capabilities with the second generation of Nitro SSDs. Interesting. So what makes AWS Nitro SSDs so unique? That's a great question. So SSDs are built from fast and NAND flash memory. Each cell of these flash devices can only be written, erased and then rewritten a limited number of times. In order to make the device last as long as possible, the SSD firmer is responsible managing and writing the flash devices such that it even out the number of write cycles over time. A typical OAM SSDs can slow down at unpredictable times when dealing with a barrage of writes, creating latency spikes. For Nitro SSDs, we built a very sophisticated PowerFailSafe journal based database as part of the custom flash translation layer of the Nitro SSD firmware to significantly reduce latency spikes. We then tightly integrated the flash translation layer with our existing Nitro system in order to deliver even better performance results. This focus on maximizing actual application transfers per seconds, increases and a sustained load rather than just benchmark figures. Additionally, we have invested heavily in our custom telemetry, diagnostic and optimization of Nitro SSD firmware update at cloud scale to promptly address any reliability or performance inconsistency concerns. Yeah, that's really cool about the custom telemetry to really help us gain more insights and diagnostic from the optimization process. So that's super cool. So what are some of the performance benefits provided by Nitro SSDs? So our internal testing of Nitro SSDs has shown up to 60% lower latency overall and up to 75% lower latency variability than our previous generation storage optimized instances, i3, resulting into a 4x more performance under sustained continuous load for a given latency versus i3 instances. Also external customers like Redis and SkillaDB saw a 2.9x and 2.7x higher throughput for queries as compared to the previous generation i3 instances. Aerospikes saw 70% increase in read throughput for the real time database use case. With Graviton based storage instances, IM4GN and IS4GN, customers like Splunk and Sprinter observed an up to 50% increase in search runtime compared to i3 and i3N instances for the indexing and search workloads. That's really astonishing to really lower that latency by 60% and 75% on latency variability, which really makes that search and optimization for things like Splunk and etc. So that's pretty cool. So what are some Amazon EC2 i4G instances? What are the types? So i4G are storage optimized instances for workloads that are high mix of random read write operations and require very low latency. Based on AWS Graviton processors and AWS Nitro SSDs, which as we now know reduce both latency and latency variability, i4G delivers the best compute price performance for a storage optimized instance and the best storage performance per terabyte of storage for a Graviton based storage instance in EC2. Gotcha. So what type of workloads would be applicable for i4G that you've seen? Yeah, that's actually very important to understand, right? Where to use i4G. So i4G instances are optimized for workloads that perform a high mix of random read write operations and require very low IO latency. Typical examples are transactional databases such as Amazon DynamoDB, MySQL and PodCree SQL. And real time data analytics such as Apache Spark. Gotcha. And just diving a little bit on the instances, right? Can you talk about the performance of the i4G instances? Yeah. So i4G instances improve real time storage performance up to two X compared to prior generation storage optimized instances. And by offering eight gigabytes of memory per vCPU, i4G instances help to maximize storage application throughput. i4G instances deliver higher compute performance and offer lower costs per terabyte compared to existing i3 and i4I instances with similar memory and storage ratio. What that really means, it helps customers to efficiently use Graviton based storage instances for their existing workloads and lower their costs. And really without like making any major changes to their cluster sizes. That's super cool. Lower costs with better performance is always a win-win. So how does i4G instances compare to other storage optimized instances? Yeah, that's a great question. So i4G instances offer similar memory and storage ratios to existing i3 instances and are optimized for workloads with small and medium sized datasets that perform a high mix of random read write and require very low IOE latency. Such as transactional databases, Amazon DynamoDB is a good example. MySQL, PostgreSQL, Amazon Search service and real-time data analytics. i4G instances deliver the best compute price performance for a storage optimized instance and best storage performance per terabyte for a Graviton based storage instance. Amazon EC2 i4G instances deliver up to 15% compute price performance for similar storage optimized instances. That's pretty cool. So have any customers started using the i4G instances yet or what are some of the results that they're seeing? Yeah. So the short answer is yes. And we have quotes from several customers on our webpage. I'll give you two examples. The first one is from Sprinklr. So Sprinklr provides unified customer experience management platform that combines different applications for marketing, advertising, and research, customer care, sales, and social media engagement. As a cloud's first company, Sprinklr is always looking to improve efficiency and optimize its cost savings. Sprinklr's data sets require very low IO latency and need high performance. After testing out Amazon EC2 i4G instances, Sprinklr is seeing an average of 12% improvement in overall performance and up to 20% improvement in overall performance. And up to 27% in some cases versus Amazon EC2 i4I instances. Sprinklr is looking forward to take advantage of the compute price performance of Amazon EC2 i4G instances to provide faster results to their customers while optimizing costs. And then we have Elastic. Elastic is the leading data analytics platform for observability, security, and search powered applications. At Elastic, we've tested the i4G instances, the latest addition to the storage optimized instance family powered by AWS, Graviton2 processes. Across the benchmark that represent the performance of common use cases pattern of customers using Elastic Search, we saw an up to 35% price performance improvement compared to the previous generation i3 instances. We are excited about the introduction of i4G instances, which promises to provide improved price performance for Elastic Search users deploying on AWS, says Jure Gupta, Principal Product Manager at Elastic. Cool. And super cool use cases there from customer reference. So that's awesome. So the last question and most important question is how do customers get started? Yeah, that's a good one. So more details about Amazon EC2 i4G instances are available on the following website, aws.amazon.com slash EC2 slash instance dash types slash i4G. And you can use i4G instances in the following AWS regions, US East, Ohio, and US East, North Virginia. i4G instances are available through saving plans, reserved instances, on demand and spot instances. Thanks. And the links will be available in the show notes. So Juergen, thanks for joining us. Thanks Hans for having me. It was really fun to talk to you. Thanks everyone for listening. And as always, we love to get your feedback. There's also a link in the show notes to submit feedback and until next time, keep on building."}, "podcast_summary": "In this episode of the AWS podcast, the hosts discuss the new Amazon EC2 i4G storage optimized instances, which are powered by AWS Graviton 2 processors and AWS Nitro SSDs. The i4G instances are designed for workloads that require low latency and high performance for random read-write operations. They are suitable for transactional databases, real-time data analytics, and search engines. The Nitro SSDs offer significantly lower latency and latency variability compared to previous generation instances, resulting in improved performance and throughput. Customers like Sprinkler and Elastic have reported significant performance improvements and cost savings by using the i4G instances. To get started, customers can visit the AWS website and access the i4G instances in select AWS regions.", "podcast_guest": "Hanwin Lagren", "podcast_highlights": "In this podcast episode, Hanwin Lagren and Juergen Frick discuss the new Amazon EC2 i4G storage optimized instances powered by AWS Graviton2 processors. These instances are based on AWS Nitro SSDs, which offer lower latency and increased performance compared to previous generation storage devices. The Nitro SSDs have a sophisticated PowerFailSafe journal-based database to reduce latency spikes and are tightly integrated with the Nitro system. Performance benefits include up to 60% lower latency and up to 75% lower latency variability. Customers such as Redis, ScyllaDB, Splunk, and Sprinkler have experienced significant improvements in throughput and runtime with the i4G instances. The i4G instances are suitable for workloads with a high mix of random read/write operations and low IO latency requirements, such as transactional databases and real-time data analytics. These instances offer higher compute performance and lower costs per terabyte compared to previous storage optimized instances. Customers can get started with i4G instances through saving plans, reserved instances, on-demand, or spot instances."}